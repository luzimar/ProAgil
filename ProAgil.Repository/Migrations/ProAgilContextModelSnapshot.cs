// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProAgil.Infra.Data.Context;

namespace ProAgil.Infra.Data.Migrations
{
    [DbContext(typeof(ProAgilContext))]
    partial class ProAgilContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("ProAgil.Domain.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataEvento")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Local")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tema")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("ProAgil.Domain.Models.Lote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<int>("EventoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Preco")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("ProAgil.Domain.Models.Palestrante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("MiniCurriculo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Palestrantes");
                });

            modelBuilder.Entity("ProAgil.Domain.Models.PalestranteEvento", b =>
                {
                    b.Property<int>("EventoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PalestranteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("EventoId", "PalestranteId");

                    b.HasIndex("PalestranteId");

                    b.ToTable("PalestrantesEventos");
                });

            modelBuilder.Entity("ProAgil.Domain.Models.RedeSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EventoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PalestranteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("PalestranteId");

                    b.ToTable("RedesSocials");
                });

            modelBuilder.Entity("ProAgil.Domain.Models.Evento", b =>
                {
                    b.OwnsOne("ProAgil.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<int>("EventoId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Address")
                                .HasColumnName("Email")
                                .HasColumnType("TEXT");

                            b1.HasKey("EventoId");

                            b1.ToTable("Eventos");

                            b1.WithOwner()
                                .HasForeignKey("EventoId");
                        });

                    b.OwnsOne("ProAgil.Domain.ValueObjects.QuantidadePessoas", "QtdPessoas", b1 =>
                        {
                            b1.Property<int>("EventoId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Quantidade")
                                .HasColumnName("QtdPessoas")
                                .HasColumnType("INTEGER");

                            b1.HasKey("EventoId");

                            b1.ToTable("Eventos");

                            b1.WithOwner()
                                .HasForeignKey("EventoId");
                        });
                });

            modelBuilder.Entity("ProAgil.Domain.Models.Lote", b =>
                {
                    b.HasOne("ProAgil.Domain.Models.Evento", null)
                        .WithMany("Lotes")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProAgil.Domain.Models.Palestrante", b =>
                {
                    b.OwnsOne("ProAgil.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<int>("PalestranteId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Address")
                                .HasColumnName("Email")
                                .HasColumnType("TEXT");

                            b1.HasKey("PalestranteId");

                            b1.ToTable("Palestrantes");

                            b1.WithOwner()
                                .HasForeignKey("PalestranteId");
                        });
                });

            modelBuilder.Entity("ProAgil.Domain.Models.PalestranteEvento", b =>
                {
                    b.HasOne("ProAgil.Domain.Models.Evento", "Evento")
                        .WithMany("PalestrantesEventos")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProAgil.Domain.Models.Palestrante", "Palestrante")
                        .WithMany("PalestrantesEventos")
                        .HasForeignKey("PalestranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProAgil.Domain.Models.RedeSocial", b =>
                {
                    b.HasOne("ProAgil.Domain.Models.Evento", null)
                        .WithMany("RedesSociais")
                        .HasForeignKey("EventoId");

                    b.HasOne("ProAgil.Domain.Models.Palestrante", null)
                        .WithMany("RedesSociais")
                        .HasForeignKey("PalestranteId");
                });
#pragma warning restore 612, 618
        }
    }
}
